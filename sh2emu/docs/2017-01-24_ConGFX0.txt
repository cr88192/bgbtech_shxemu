In Console Graphics

Console Graphics may be mixed with ASCII and ANSI codes.

Each graphics block will be a single character cell, and will use the same layout as the textual console.
Control characters are to behave similarly to as to when printing ASCII text. 

* ESC !
** Enter LBR0 Mode
** Blocks are encoded as 4 base85 characters representing a 25 bit value.
* ESC $
** Enter LBR1 Mode
** Blocks are encoded as 5 base85 characters representing a 32 bit value.

LBR0 Blocks:
* Bits 0..15: Pixel Bits
** 0=ColorA, 1=ColorB
* Bits 16..19: ColorB
* Bits 20..23: ColorA
** Ordered as I,B,G,R
* Bit 24: Indicates whether more LBR0 blocks follow.
** If 0, this falls back to ASCII mode.

Logical 16-color palette (LSB=Red):
*	0xFF000000,	0xFF0000AA,	0xFF00AA00,	0xFF00AAAA,
*	0xFFAA0000,	0xFFAA00AA,	0xFFAA5500,	0xFFAAAAAA,
*	0xFF555555,	0xFF5555FF,	0xFF55FF55,	0xFF55FFFF,
*	0xFFFF5555,	0xFFFF55FF,	0xFFFFFF55,	0xFFFFFFFF

LBR1 Blocks:
* Bits 0-23: Block Data
* Bits 24-27: Block Mode
* Bits 28-31: Block Tag
** 0: After emitting block, fall back to ASCII
** 1: Another LBR1 block follows
** 2: An extended-data block follows, then fall back to ASCII
** 3: An extended-data block follows, continue in LBR1 mode.

Extended data block:
* Encoded as a 32-bit base85 value.
* Stored in the same logical position as the preceeding LBR1 block.
* As 2-bit: 0=ColorA, 1=2/3*ColorA+1/3*ColorB, 2=1/3*ColorA+2/3*ColorB, 3=ColorB
* If an LRB0 block has a color of 0x55, Extended data used as RGB555 color pair.
** 0=color in high 16 bits
** 1=color in low 16 bits

Block Mode:
* 0: Low 24 bits interpreted as in an LBR0 block.
* 1/2/3: Low 24 bits interpreted as color-vector
** Bits  0- 5: Red
** Bits  6-11: Green
** Bits 12-17: Blue
** Bits 18-23: Luma Range
** 1: Extended-data is interpreted as pixel bits (4x8x1).
** 2: Extended-data is interpreted as pixel bits (8x4x1).
** 3: Extended-data is interpreted as pixel bits (4x4x2).
* 5/6/7: Low 24 bits interpreted as color-pair
** Bits  0- 3: Red B
** Bits  4- 7: Green B
** Bits  8-11: Blue B
** Bits 12-15: Red A
** Bits 16-19: Green A
** Bits 20-23: Blue A
*** 4 bit values map to 8 bits as: 0x00, 0x11, 0x22, ..., 0xEE, 0xFF
** Modes similar to 1/2/3.
